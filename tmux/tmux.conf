#-----------------------------------------
# set-option -g prefix C-q
# unbind-key C-b
# bind-key C-q send-prefix
#-----------------------------------------

#-- use mouse to select window and pane --#
# Copy the text: select the text and press mouse left-button with shift key press too.
# Paste the text: shift key + middle-button
### Mouse On/Off ### {{{
## Mouse On by default
set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

## Toggle mouse on with <prefix>m
bind m \
        set -g mode-mouse on          \;\
        set -g mouse-resize-pane on   \;\
        set -g mouse-select-pane on   \;\
        set -g mouse-select-window on \;\
        display 'Mouse: On'

## Toggle mouse off with <prefix>M
bind M \
        set -g mode-mouse off          \;\
        set -g mouse-resize-pane off   \;\
        set -g mouse-select-pane off   \;\
        set -g mouse-select-window off \;\
        display 'Mouse: Off'
### End Mouse On/Off ### }}}

#-- let tmux support 256 color --#
setw -g xterm-keys on
set-option -g default-terminal "screen-256color"

#-- set pane color --#
set -g pane-border-fg green
set -g pane-active-border-fg red

set -g display-time 3000
set -g escape-time 0
set -g history-limit 65535
set -g base-index 1
setw -g utf8 on

#-- split window --#
unbind '"'
bind - splitw -v -c "#{pane_current_path}" # vertical split (prefix -)
unbind %
bind | splitw -h -c "#{pane_current_path}" # horizontal split (prefix |)

#-- select pane --#
bind k selectp -U                 # above (prefix k)
bind j selectp -D                 # below (prefix j)
bind h selectp -L                 # left (prefix h)
bind l selectp -R                 # right (prefix l)

#-- resize pane --#
bind -r ^k resizep -U 5           # upward (prefix Ctrl+k)
bind -r ^j resizep -D 5           # downward (prefix Ctrl+j)
bind -r ^h resizep -L 5           # to the left (prefix Ctrl+h)
bind -r ^l resizep -R 5           # to the right (prefix Ctrl+l)

#-- swap pane --#
bind ^u swapp -U                  # swap with the previous pane (prefix Ctrl+u)
bind ^d swapp -D                  # swap with the next pane (prefix Ctrl+d)

#-- misc --#
bind e lastp                      # select the last pane (prefix e)
bind ^e last                      # select the last window (prefix Ctrl+e)

#-- copy mode --#
bind Escape copy-mode             # enter copy mode (prefix Escape)
bind -t vi-copy v begin-selection # select (v)
bind -t vi-copy y copy-selection  # copy (y)
# move file content into tmux paste buffer
bind ^p  command-prompt "splitw 'exec tmux set-buffer \"$(cat %%)\"'"
# move tmux copy buffer into x clipboard
bind ^y run "tmux save-buffer - >(xclip -i /dev/stdin)"

# zoom pane <-> window
# see also: http://tmux.svn.sourceforge.net/viewvc/tmux/trunk/examples/tmux-zoom.sh
bind ^z run "tmux-zoom"

# synchronize panes
bind ^s setw synchronize-panes

#-- app --#
bind !  splitw htop                                     # htop (prefix !)
bind @  command-prompt "splitw 'exec perldoc -t -f %%'" # perl func (prefix @)
bind *  command-prompt "splitw 'exec perldoc -t -v %%'" # perl var  (prefix *)
bind %  command-prompt "splitw 'exec perldoc -t %%'"    # perl doc  (prefix %)
bind /  command-prompt "splitw 'exec ri %%'"            # ruby doc  (prefix /)
bind y command-prompt "splitw 'exec ydcv --color always %% | less'"
bind ^x command-prompt "kill-session -t %%"

#-- reload config (prefix r) --#
bind r source ~/.tmux.conf \; display "Configuration reloaded!"

setw -g mode-keys vi
setw -g automatic-rename on

#-- modes --#
setw -g clock-mode-colour colour223
setw -g mode-attr bold
setw -g mode-fg colour223
setw -g mode-bg colour235

#-- messages --#
set -g message-attr bold
set -g message-fg colour223
set -g message-bg default

#-- statusbar --#
set -g status-utf8 on
set -g status-interval 1
set -g status-keys vi
set -g status-justify left
set -g display-time 3000
set -g status-bg default
set -g status-fg white
set-window-option -g window-status-current-attr default
set-window-option -g window-status-current-fg red
set-window-option -g window-status-current-bg default

set -g status-left-length 15
set -g status-right-length 55

set -g status-left "#[fg=white,bg=blue] > #I #W < #[default] |"         # 0:bash
set -g status-left "#[fg=white,bg=default] > #S < #[default] |"         # session-name
set -g status-right ""
set -g status-right "#[fg=red,bright][ #[fg=cyan]#(echo $USER) #[fg=red]]#[default] #[fg=yellow,bright]- %Y.%m.%d #[fg=green]%H:%M #[default]#[fg=magenta,bright](load: #(cat /proc/loadavg | cut -d \" \" -f 1,2,3))#[default]"
